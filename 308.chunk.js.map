{"version":3,"file":"308.chunk.js","mappings":"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","sources":["webpack://template/./src/pages/tutorial/chart/TutorialChart.tsx","webpack://template/./src/pages/tutorial/cluster/TutorialCluster.tsx","webpack://template/./src/pages/tutorial/histogram/TutorialHistogram.tsx","webpack://template/./src/pages/tutorial/map/TutorialMap.tsx","webpack://template/./src/pages/tutorial/pie/TutorialPie.tsx","webpack://template/./src/pages/tutorial/shapes/TutorialShapes.tsx","webpack://template/./src/pages/tutorial/tree/TutorialTree.tsx","webpack://template/./src/pages/tutorial/treemap/TutorialTreemap.tsx","webpack://template/./src/pages/tutorial/TutorialPage.tsx","webpack://template/./node_modules/internmap/src/index.js"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport { FC, useEffect, useRef } from \"react\";\r\n\r\nconst SCALE_HEIGHT = 20;\r\nconst SLICE_HEIGHT = 25;\r\nconst SLICE_BETWEEN = 20;\r\n\r\nconst TutorialChart: FC<{\r\n  data: number[];\r\n  height?: number;\r\n  width?: number;\r\n  padding?: number;\r\n}> = ({\r\n  data,\r\n  padding = 20,\r\n  height = data.length * (SLICE_HEIGHT + SLICE_BETWEEN) +\r\n    2 * padding +\r\n    SCALE_HEIGHT,\r\n  width,\r\n}) => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const { width, height } = containerRef.current.getBoundingClientRect();\r\n\r\n      const widthScale = d3\r\n        .scaleLinear()\r\n        .domain([0, Math.max(...data)])\r\n        .range([0, width - 2 * padding]);\r\n\r\n      const colors = d3\r\n        .scaleLinear()\r\n        .domain([0, data.length])\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        .range([\"red\", \"blue\"] as any);\r\n\r\n      const svg = d3\r\n        .select(containerRef.current)\r\n        .append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${padding}, ${padding})`);\r\n\r\n      // const bars =\r\n      svg\r\n        .selectAll(\"rect\")\r\n        .data(data)\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\"width\", (d) => widthScale(d))\r\n        .attr(\"height\", SLICE_HEIGHT)\r\n        .attr(\"fill\", (_, i) => colors(i))\r\n        .attr(\"fill-opacity\", 0.65)\r\n        .attr(\"y\", (d, i) => (SLICE_HEIGHT + SLICE_BETWEEN) * i)\r\n        .attr(\"stroke\", (_, i) => colors(i))\r\n        .attr(\"stroke-width\", 1)\r\n        .attr(\"rx\", 3);\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\r\n          \"transform\",\r\n          `translate(${0}, ${height - SCALE_HEIGHT - 2 * padding})`\r\n        )\r\n        .call(d3.axisBottom(widthScale));\r\n    }\r\n\r\n    return () => {\r\n      containerRef.current = null;\r\n    };\r\n  }, [data, padding]);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      style={{\r\n        border: \"1px solid #000\",\r\n        width,\r\n        height,\r\n        overflow: \"hidden\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TutorialChart;\r\n","import * as d3 from \"d3\";\r\nimport { FC, useEffect, useRef } from \"react\";\r\n\r\ntype NodeType =\r\n  | { name: string; children: NodeType[] }\r\n  | { name: string; value: number };\r\n\r\nconst TutorialCluster: FC<{\r\n  data: NodeType;\r\n  height?: number;\r\n  width?: number;\r\n  padding?: number;\r\n  nodePadding?: number;\r\n}> = ({ data, padding = 20, height = 300, width, nodePadding = 5 }) => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const { width, height } = containerRef.current.getBoundingClientRect();\r\n      const svg = d3\r\n        .select(containerRef.current)\r\n        .append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${padding}, ${padding})`);\r\n\r\n      const pack = d3\r\n        .pack()\r\n        .size([width - 2 * padding, height - 2 * padding])\r\n        .padding(nodePadding)(\r\n        d3\r\n          .hierarchy(data)\r\n          // .count()\r\n          .sum((d) => (d as { value: number }).value || 0)\r\n      );\r\n\r\n      const nodes = pack.descendants();\r\n      const colors = d3.quantize(\r\n        (t) => d3.interpolateCool(t * 0.8 + 0.1),\r\n        pack.height + 1\r\n      );\r\n\r\n      const node = svg\r\n        .selectAll()\r\n        .data(nodes)\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"node\")\r\n        .attr(\"transform\", (d) => `translate(${d.x}, ${d.y})`);\r\n\r\n      node\r\n        .append(\"circle\")\r\n        .attr(\"r\", (d) => d.r)\r\n        .attr(\"fill\", (d) => colors[d.height])\r\n        .attr(\"fill-opacity\", 0.25)\r\n        .attr(\"stroke\", (d) => colors[d.height])\r\n        .attr(\"stroke-width\", 1);\r\n\r\n      node\r\n        .append(\"text\")\r\n        .text((d) =>\r\n          (d.data as { children: NodeType[] }).children\r\n            ? \"\"\r\n            : (d.data as NodeType).name\r\n        )\r\n        .attr(\"fill\", (d) => colors[d.height])\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"transform\", \"translate(0, 5)\");\r\n    }\r\n\r\n    return () => {\r\n      containerRef.current = null;\r\n    };\r\n  }, [data, nodePadding, padding]);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      style={{\r\n        border: \"1px solid #000\",\r\n        height,\r\n        width,\r\n        overflow: \"hidden\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TutorialCluster;\r\n","import * as d3 from \"d3\";\r\nimport { FC, useEffect, useRef } from \"react\";\r\n\r\nconst SCALE_SIZE = 20;\r\n\r\nconst TutorialHistogram: FC<{\r\n  data: number[];\r\n  height?: number;\r\n  width?: number;\r\n  padding?: number;\r\n  between?: number;\r\n  thresholds?: number;\r\n}> = ({\r\n  data,\r\n  padding = 20,\r\n  height = 300,\r\n  width,\r\n  between = 5,\r\n  thresholds = 5,\r\n}) => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const { width, height } = containerRef.current.getBoundingClientRect();\r\n      const xRange = [0, width - SCALE_SIZE - 2 * padding];\r\n      const yRange = [height - SCALE_SIZE - 2 * padding, 0];\r\n\r\n      const calcHeight = (d: d3.Bin<number, number>) =>\r\n        height - yScale(d.length) - SCALE_SIZE - 2 * padding;\r\n      const calcWidth = (d: d3.Bin<number, number>) =>\r\n        Math.max(0, xScale(d.x1 || 0) - xScale(d.x0 || 0) - between);\r\n\r\n      const svg = d3\r\n        .select(containerRef.current)\r\n        .append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${padding}, ${padding})`);\r\n\r\n      const histogram = d3.bin().thresholds(thresholds)(data);\r\n\r\n      const xDomain = [\r\n        histogram[0].x0 || 0,\r\n        histogram[histogram.length - 1].x1 || 0,\r\n      ];\r\n      const yDomain = [0, d3.max(histogram.map((i) => i.length)) || 0];\r\n\r\n      const xScale = d3.scaleLinear(xDomain, xRange);\r\n      const yScale = d3.scaleLinear(yDomain, yRange);\r\n\r\n      const bars = svg\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${SCALE_SIZE}, 0)`)\r\n        .selectAll()\r\n        .data(histogram)\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\r\n          \"transform\",\r\n          (d) =>\r\n            `translate(${xScale(d.x0 || 0) + between / 2}, ${yScale(d.length)})`\r\n        );\r\n\r\n      bars\r\n        .append(\"rect\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"width\", calcWidth)\r\n        .attr(\"y\", 0)\r\n        .attr(\"height\", calcHeight)\r\n        .attr(\"fill\", (d) => d3.interpolateCool(1 - d.length / yDomain[1]));\r\n\r\n      bars\r\n        .append(\"text\")\r\n        .text((d) => d.length)\r\n        .attr(\"fill\", \"#fff\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"font-size\", 12)\r\n        .attr(\r\n          \"transform\",\r\n          (d) => `translate(${calcWidth(d) / 2}, ${calcHeight(d) / 2 + 5})`\r\n        );\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${SCALE_SIZE}, 0)`)\r\n        .call(d3.axisLeft(yScale));\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\r\n          \"transform\",\r\n          `translate(${SCALE_SIZE}, ${height - SCALE_SIZE - 2 * padding})`\r\n        )\r\n        .call(d3.axisBottom(xScale));\r\n    }\r\n\r\n    return () => {\r\n      containerRef.current = null;\r\n    };\r\n  }, [between, data, padding, thresholds]);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      style={{\r\n        border: \"1px solid #000\",\r\n        height,\r\n        width,\r\n        overflow: \"hidden\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TutorialHistogram;\r\n","import * as d3 from \"d3\";\r\nimport { FC, useEffect, useRef } from \"react\";\r\nimport mapData from \"./mapData.json\";\r\n\r\nconst TutorialMap: FC<{\r\n  height?: number;\r\n  width?: number;\r\n  padding?: number;\r\n}> = ({ height = 700, width, padding = 20 }) => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const { width, height } = containerRef.current.getBoundingClientRect();\r\n\r\n      const svg = d3\r\n        .select(containerRef.current)\r\n        .append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${padding}, ${padding})`);\r\n\r\n      const group = svg.selectAll().data(mapData.features).enter().append(\"g\");\r\n\r\n      const path = d3\r\n        .geoPath()\r\n        .projection(d3.geoMercator().fitSize([width, height], mapData));\r\n\r\n      // const areas =\r\n      group\r\n        .append(\"path\")\r\n        .attr(\"d\", path)\r\n        .attr(\"class\", \"area\")\r\n        .attr(\"fill\", \"#c4c4c4\");\r\n\r\n      group\r\n        .append(\"text\")\r\n        .attr(\"x\", (d) => path.centroid(d)[0])\r\n        .attr(\"y\", (d) => path.centroid(d)[1])\r\n        .text((d) => d.properties.name_en);\r\n    }\r\n\r\n    return () => {\r\n      containerRef.current = null;\r\n    };\r\n  }, [padding]);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      style={{\r\n        border: \"1px solid #000\",\r\n        width,\r\n        height,\r\n        overflow: \"hidden\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TutorialMap;\r\n","import * as d3 from \"d3\";\r\nimport { FC, useEffect, useRef } from \"react\";\r\n\r\nconst TutorialPie: FC<{\r\n  data: number[];\r\n  labels?: (string | number)[];\r\n  height?: number;\r\n  width?: number;\r\n  padding?: number;\r\n  radius?: number;\r\n  pieWidth?: number;\r\n}> = ({\r\n  data,\r\n  labels = data,\r\n  height = 300,\r\n  width = height,\r\n  padding = 20,\r\n  radius,\r\n  pieWidth,\r\n}) => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const { width, height } = containerRef.current.getBoundingClientRect();\r\n      const RADIUS =\r\n        radius ||\r\n        d3.min([(height - 2 * padding) / 2, (width - 2 * padding) / 2]) ||\r\n        50;\r\n\r\n      const colors = d3.quantize(\r\n        (t) => d3.interpolateRainbow(t * 0.8 + 0.1),\r\n        data.length\r\n      );\r\n\r\n      const arc = d3\r\n        .arc()\r\n        .innerRadius(pieWidth ? RADIUS - pieWidth : 0)\r\n        .outerRadius(RADIUS);\r\n\r\n      const arcs = d3\r\n        .select(containerRef.current)\r\n        .append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .append(\"g\")\r\n        .attr(\r\n          \"transform\",\r\n          `translate(${padding + RADIUS}, ${padding + RADIUS})`\r\n        )\r\n        .selectAll()\r\n        .data(d3.pie().sort(null)(data))\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"arc\");\r\n\r\n      arcs\r\n        .append(\"path\")\r\n        .attr(\"class\", \"arc__path\")\r\n        .attr(\"stroke-width\", 0.5)\r\n        .attr(\"stroke\", \"#fff\")\r\n        .attr(\r\n          \"d\",\r\n          arc as d3.ValueFn<\r\n            SVGPathElement,\r\n            unknown,\r\n            string | number | boolean | readonly (string | number)[] | null\r\n          > | null\r\n        )\r\n        .attr(\"fill\", (_, i) => colors[i]);\r\n\r\n      arcs\r\n        .append(\"text\")\r\n        .attr(\r\n          \"transform\",\r\n          (d) =>\r\n            `translate(${arc\r\n              // .innerRadius(RADIUS - 40)\r\n              // .outerRadius(RADIUS)\r\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n              .centroid(d as any)})`\r\n        )\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .text((d, i) => String(labels[i]))\r\n        .attr(\"class\", \"arc__value\");\r\n    }\r\n\r\n    return () => {\r\n      containerRef.current = null;\r\n    };\r\n  }, [height, padding, pieWidth, radius, width, data, labels]);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      style={{\r\n        border: \"1px solid #000\",\r\n        width,\r\n        height,\r\n        overflow: \"hidden\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TutorialPie;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nconst TutorialShapes = () => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const svg = d3\r\n        .select(containerRef.current)\r\n        .append(\"svg\")\r\n        .attr(\"height\", 400)\r\n        .attr(\"width\", 400);\r\n\r\n      svg\r\n        .append(\"circle\") // круг\r\n        .attr(\"cx\", 150) // координата X цента\r\n        .attr(\"cy\", 150) // координата Y цента\r\n        .attr(\"r\", 50) // радиус\r\n        .attr(\"fill\", \"red\");\r\n\r\n      svg\r\n        .append(\"rect\") // прямоугольник\r\n        .attr(\"width\", 100) // ширина прямоугольника\r\n        .attr(\"height\", 50); // высота прямоугольника\r\n      // .attr(\"fill\", \"red\");\r\n\r\n      svg\r\n        .append(\"line\") // линия\r\n        .attr(\"x1\", 0) // координата X начала линии\r\n        .attr(\"y1\", 100) //  координата Y начала линии\r\n        .attr(\"x2\", 400) // координата X начала линии\r\n        .attr(\"y2\", 400) //  координата Y начала линии\r\n        .attr(\"stroke\", \"green\")\r\n        .attr(\"stroke-width\", 2);\r\n    }\r\n\r\n    return () => {\r\n      containerRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      style={{\r\n        border: \"1px solid #000\",\r\n        display: \"inline-block\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TutorialShapes;\r\n","import * as d3 from \"d3\";\r\nimport { FC, useEffect, useRef } from \"react\";\r\n\r\ninterface INodeData {\r\n  name: string;\r\n  children?: INodeData[];\r\n}\r\n\r\nconst TutorialTree: FC<{\r\n  data: INodeData;\r\n  height?: number;\r\n  width?: number;\r\n  padding?: number;\r\n}> = ({ data, height = 300, width, padding = 20 }) => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const { width, height } = containerRef.current.getBoundingClientRect();\r\n\r\n      const svg = d3\r\n        .select(containerRef.current)\r\n        .append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${padding}, ${padding})`);\r\n\r\n      const link = d3\r\n        .linkHorizontal()\r\n        .x((d) => d[0])\r\n        .y((d) => d[1]);\r\n\r\n      const tree = d3.tree().size([width - 2 * padding, height - 2 * padding])(\r\n        d3.hierarchy(data)\r\n      );\r\n\r\n      const nodes = tree.descendants();\r\n      const links = tree.links();\r\n\r\n      const colors = d3.quantize(\r\n        (t) => d3.interpolateRainbow(t * 0.8 + 0.1),\r\n        nodes.length\r\n      );\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"class\", \"links\")\r\n        .selectAll()\r\n        .data(links)\r\n        .join(\"path\")\r\n        .attr(\"d\", (d) =>\r\n          link({\r\n            source: [d.source.x, d.source.y],\r\n            target: [d.target.x, d.target.y],\r\n          })\r\n        )\r\n        .attr(\"class\", \"link\")\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", (_, i) => colors[i + 1]);\r\n\r\n      const node = svg\r\n        .append(\"g\")\r\n        .attr(\"class\", \"nodes\")\r\n        .selectAll()\r\n        .data(nodes)\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"node\")\r\n        .attr(\"transform\", (d) => `translate(${d.x}, ${d.y})`);\r\n\r\n      node\r\n        .append(\"circle\")\r\n        .attr(\"r\", 5)\r\n        .attr(\"fill\", (_, i) => colors[i]);\r\n\r\n      node\r\n        .append(\"text\")\r\n        .text((d) => (d.data as { name: string }).name)\r\n        .attr(\"fill\", (_, i) => colors[i])\r\n        .attr(\"transform\", \"translate(10,5)\");\r\n    }\r\n\r\n    return () => {\r\n      containerRef.current = null;\r\n    };\r\n  }, [data, padding]);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      style={{\r\n        border: \"1px solid #000\",\r\n        width,\r\n        height,\r\n        overflow: \"hidden\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TutorialTree;\r\n","import * as d3 from \"d3\";\r\nimport { FC, useEffect, useRef } from \"react\";\r\n\r\ntype NodeType =\r\n  | { name: string; children: NodeType[] }\r\n  | { name: string; value: number };\r\n\r\nconst TutorialTreemap: FC<{\r\n  data: NodeType;\r\n  height?: number;\r\n  width?: number;\r\n  padding?: number;\r\n}> = ({ data, padding = 10, height = 300, width }) => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const { width, height } = containerRef.current.getBoundingClientRect();\r\n\r\n      const svg = d3\r\n        .select(containerRef.current)\r\n        .append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${padding}, ${padding})`);\r\n\r\n      const treemap = d3\r\n        .treemap()\r\n        .size([width - 2 * padding, height - 2 * padding])\r\n        .padding(5)\r\n        .paddingTop(30)(\r\n        d3\r\n          .hierarchy(data)\r\n          // .count()\r\n          .sum((d) => (d as { value: number }).value || 0)\r\n      );\r\n\r\n      const color = d3\r\n        .scaleOrdinal()\r\n        .range(\r\n          d3.quantize(\r\n            (t) => d3.interpolateCool(t * 0.8 + 0.1),\r\n            (treemap.ancestors()[0].children?.length || 0) + 1\r\n          )\r\n        );\r\n      const calcColor = (d: d3.HierarchyRectangularNode<unknown>) => {\r\n        while (d.depth > 1 && d.parent) d = d.parent;\r\n        return color((d.data as NodeType).name) as string;\r\n      };\r\n\r\n      const cells = svg\r\n        .selectAll()\r\n        .data(treemap.descendants())\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"cell\")\r\n        .attr(\"transform\", (d) => `translate(${d.x0}, ${d.y0})`);\r\n\r\n      cells\r\n        .append(\"rect\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"x\", 0)\r\n        .attr(\"width\", (d) => d.x1 - d.x0)\r\n        .attr(\"y\", 0)\r\n        .attr(\"height\", (d) => d.y1 - d.y0)\r\n        .attr(\"rx\", 4)\r\n        .attr(\"fill\", calcColor)\r\n        .attr(\"fill-opacity\", 0.35)\r\n        .attr(\"stroke\", calcColor)\r\n        .attr(\"stroke-width\", 1);\r\n\r\n      cells\r\n        .append(\"text\")\r\n        .text((d) => (d.data as NodeType).name)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        // .attr(\"fill\", calcColor)\r\n        .attr(\"fill\", \"#fff\")\r\n        .attr(\"transform\", (d) => `translate(${(d.x1 - d.x0) / 2}, ${20})`);\r\n\r\n      console.log();\r\n    }\r\n\r\n    return () => {\r\n      containerRef.current = null;\r\n    };\r\n  }, [data, padding]);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      style={{\r\n        border: \"1px solid #000\",\r\n        height,\r\n        width,\r\n        overflow: \"hidden\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TutorialTreemap;\r\n","import TutorialChart from \"./chart/TutorialChart\";\r\nimport TutorialCluster from \"./cluster/TutorialCluster\";\r\nimport TutorialHistogram from \"./histogram/TutorialHistogram\";\r\nimport TutorialMap from \"./map/TutorialMap\";\r\nimport TutorialPie from \"./pie/TutorialPie\";\r\nimport TutorialShapes from \"./shapes/TutorialShapes\";\r\nimport TutorialTree from \"./tree/TutorialTree\";\r\nimport TutorialTreemap from \"./treemap/TutorialTreemap\";\r\n\r\nenum SectionsEnum {\r\n  SHAPES = \"shapes\",\r\n  CHART = \"chart\",\r\n  PIE = \"pie\",\r\n  TREE = \"tree\",\r\n  CLASTER = \"claster\",\r\n  HISTOGRAM = \"histogram\",\r\n  TREEMAP = \"treemap\",\r\n  MAP = \"map\",\r\n}\r\n\r\nconst DATA = {\r\n  name: \"Max\",\r\n  children: [\r\n    { name: \"Mr X\", value: 200 },\r\n    {\r\n      name: \"Sylvia\",\r\n      children: [\r\n        { name: \"Craig\", value: 75 },\r\n        { name: \"Robin\", value: 65 },\r\n        { name: \"Anna\", value: 50 },\r\n      ],\r\n    },\r\n    {\r\n      name: \"David\",\r\n      children: [\r\n        { name: \"Jeff\", value: 80 },\r\n        { name: \"Buffy\", value: 45 },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nconst TutorialPage = () => {\r\n  return (\r\n    <main>\r\n      <h1>Tutorial</h1>\r\n\r\n      <nav>\r\n        <ul>\r\n          {Object.values(SectionsEnum).map((section) => (\r\n            <li key={section}>\r\n              <a href={`#${section}`}>{section}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n\r\n      <section id={SectionsEnum.SHAPES}>\r\n        <h2>Shapes</h2>\r\n        <TutorialShapes />\r\n      </section>\r\n\r\n      <section id={SectionsEnum.CHART}>\r\n        <h2>Visualizing data</h2>\r\n        <TutorialChart data={[20, 40, 32, 70, 55, 120]} />\r\n      </section>\r\n\r\n      <section id={SectionsEnum.CHART}>\r\n        <h2>Pie chart</h2>\r\n        <TutorialPie\r\n          data={[10, 42, 25, 36]}\r\n          // labels={Array(4)\r\n          //   .fill(\"\")\r\n          //   .map((_, i) => i + 1)}\r\n        />\r\n      </section>\r\n\r\n      <section id={SectionsEnum.TREE}>\r\n        <h2>Tree</h2>\r\n        <TutorialTree data={DATA} />\r\n      </section>\r\n\r\n      <section id={SectionsEnum.CLASTER}>\r\n        <h2>Cluster (pack) layout</h2>\r\n        <TutorialCluster data={DATA} />\r\n      </section>\r\n\r\n      <section id={SectionsEnum.HISTOGRAM}>\r\n        <h2>Histogram</h2>\r\n        <TutorialHistogram\r\n          data={Array(200)\r\n            .fill(\"\")\r\n            .map(() => Math.floor(Math.random() * 80))}\r\n          between={2}\r\n          thresholds={40}\r\n        />\r\n      </section>\r\n\r\n      <section id={SectionsEnum.TREEMAP}>\r\n        <h2>Treemap</h2>\r\n        <TutorialTreemap data={DATA} />\r\n      </section>\r\n\r\n      <section id={SectionsEnum.MAP}>\r\n        <h2>Italy map</h2>\r\n        <TutorialMap />\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TutorialPage;\r\n","export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(key);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n"],"names":["data","padding","height","length","width","containerRef","useRef","useEffect","current","getBoundingClientRect","widthScale","d3","domain","Math","max","range","colors","svg","append","attr","selectAll","enter","d","_","i","call","ref","style","border","overflow","nodePadding","pack","size","sum","value","nodes","descendants","t","node","x","y","r","text","children","name","SCALE_SIZE","between","thresholds","xRange","yRange","calcHeight","yScale","calcWidth","xScale","x1","x0","histogram","xDomain","yDomain","map","bars","group","mapData","path","projection","fitSize","centroid","properties","name_en","labels","radius","pieWidth","RADIUS","arc","innerRadius","outerRadius","arcs","sort","String","display","link","tree","links","join","source","target","treemap","paddingTop","color","ancestors","calcColor","depth","parent","cells","y0","y1","console","log","SectionsEnum","DATA","Object","values","section","href","id","SHAPES","CHART","TREE","CLASTER","HISTOGRAM","Array","fill","floor","random","TREEMAP","MAP","InternMap","Map","constructor","entries","key","keyof","super","defineProperties","this","_intern","_key","set","get","intern_get","has","intern_set","delete","intern_delete","Set","valueOf"],"sourceRoot":""}